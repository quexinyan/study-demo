适配器模式：http://www.cnblogs.com/java-my-life/archive/2012/04/13/2442795.html
		https://blog.csdn.net/lmj623565791/article/details/25833393
		https://www.ibm.com/developerworks/cn/java/j-lo-adapter-pattern/
		
定义：将一个类的接口转换成客户期望的另一个接口，适配器让原本接口不兼容的类可以相互合作。这个定义还好，说适配器的功能就是把一个接口转成另一个接口。

自己的理解：此时有一个需求，同时需要A类中的功能，和B类中的功能，但不想修改A和B类，此时就可以使用适配器模式，作为一个中转类，此类包含需要的A和B类的功能。
		
应用场景：
	在软件开发中，也就是系统的数据和行为都正确，但接口不相符时，我们应该考虑用适配器，目的是使控制范围之外的一个原有对象与某个接口匹配。
适配器模式主要应用于希望复用一些现存的类，但是接口又与复用环境要求不一致的情况。比如在需要对早期代码复用一些功能等应用上很有实际价值。适用场景大致包含三类：
1、已经存在的类的接口不符合我们的需求；
2、创建一个可以复用的类，使得该类可以与其他不相关的类或不可预见的类（即那些接口可能不一定兼容的类）协同工作；
3、在不对每一个都进行子类化以匹配它们的接口的情况下，使用一些已经存在的子类。